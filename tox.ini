[tox]
envlist = py312
isolated_build = True

[testenv]
description = Run tests for ops_core and agentkit with src layout
# Tox should automatically discover packages in src/ when run from the root
# No need for 'package = editable-legacy' or explicit PYTHONPATH setting usually

# Pass necessary environment variables if needed (e.g., for live tests later)
passenv =
    DATABASE_URL
    # Add other env vars like API keys if/when needed for specific test sets

# Install dependencies for both packages
deps =
    # Test tools
    pytest
    pytest-asyncio
    pytest-mock
    locust>=2.0.0

    # Install ops_core editable with its dependencies
    -e ./ops_core

    # Install agentkit editable with its test dependencies
    -e ./agentkit[test]

allowlist_externals =
    bash
    python

commands =
    # 1. Generate gRPC code (adjust paths for root execution and src layout)
    #    Note: Output path needs to be relative to root now, pointing into src/
    python -m grpc_tools.protoc -I{toxinidir}/src/ops_core/proto --python_out={toxinidir}/src/ops_core/grpc_internal --grpc_python_out={toxinidir}/src/ops_core/grpc_internal {toxinidir}/src/ops_core/proto/tasks.proto

    # 2. Run the import fix script (adjust path for root execution)
    #    The script itself is still in ops_core/scripts, but the target dir is in src/
    bash {toxinidir}/ops_core/scripts/fix_grpc_imports.sh {toxinidir}/src/ops_core/grpc_internal

    # 3. Run pytest, letting it discover tests based on installed packages
    #    {posargs} allows passing extra arguments to pytest, e.g., -k, -m
    python -m pytest {posargs}

[tool.pytest.ini_options]
# Add asyncio config here proactively to avoid the warning
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
