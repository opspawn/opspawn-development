[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ops-core"
version = "0.1.0"
description = "Orchestration engine for Opspawn agents."
readme = "README.md" # Assuming a README might exist or be added later
requires-python = ">=3.8"
# List direct dependencies identified earlier (excluding test tools and agentkit)
dependencies = [
    "pydantic",
    "mcp",
    "anthropic",
    "python-dotenv",
    "PyYAML",
    "openai>=1.0.0,<2.0.0", # Added for agentkit client instantiation
    "google-genai", # Use the new recommended SDK
    # "protobuf==4.25.3", # Removed pin, let new SDK manage dependencies
    "numpy<2.0", # Pin numpy to avoid chromadb incompatibility with np.float_
    "fastapi>=0.110.0", # Added for REST API
    "uvicorn[standard]>=0.29.0", # Added for running FastAPI server
    "grpcio==1.62.1", # Pinned for gRPC runtime
    "grpcio-tools==1.62.1", # Pinned for gRPC code generation (match grpcio)
    "dramatiq[rabbitmq]>=1.17.0", # Added for async task queue
    "sqlmodel>=0.0.16", # Added for SQL DB interaction
    "asyncpg>=0.29.0", # Added for async PostgreSQL driver
    "psycopg2-binary>=2.9.0", # Added for synchronous PostgreSQL operations (like Alembic in test script)
    "alembic>=1.13.1", # Added for database migrations
]

[tool.setuptools.packages.find]
# Look for packages inside the 'src' directory relative to this project root
where = ["src"]
# Setuptools should find the 'ops_core' package within the 'src/' directory specified by 'where'
exclude = ["tests*"] # Exclude the tests directory relative to the root

[tool.pytest.ini_options]
asyncio_mode = "auto" # Change from strict to auto
asyncio_default_fixture_loop_scope = "function" # Revert back to function scope for better isolation
# Register custom markers
markers = [
    "live: mark test as live integration test requiring API keys",
]
