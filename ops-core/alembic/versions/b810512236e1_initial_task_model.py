"""Initial task model

Revision ID: b810512236e1
Revises: 
Create Date: 2025-04-09 05:24:39.983579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel # Add missing import
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b810512236e1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task',
    sa.Column('task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('task_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    # Store status as VARCHAR instead of native ENUM to avoid potential driver issues
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('scheduled_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('input_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('result', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('agent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('workflow_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_task_agent_id'), 'task', ['agent_id'], unique=False)
    op.create_index(op.f('ix_task_created_at'), 'task', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_status'), 'task', ['status'], unique=False)
    op.create_index(op.f('ix_task_task_id'), 'task', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_task_type'), 'task', ['task_type'], unique=False)
    op.create_index(op.f('ix_task_workflow_id'), 'task', ['workflow_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_workflow_id'), table_name='task')
    op.drop_index(op.f('ix_task_task_type'), table_name='task')
    op.drop_index(op.f('ix_task_task_id'), table_name='task')
    op.drop_index(op.f('ix_task_status'), table_name='task')
    op.drop_index(op.f('ix_task_created_at'), table_name='task')
    op.drop_index(op.f('ix_task_agent_id'), table_name='task')
    op.drop_table('task')
    # ### end Alembic commands ###
